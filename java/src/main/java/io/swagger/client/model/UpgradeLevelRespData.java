/*
 * UserManagementAPI
 * API for user management
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@naqdina.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UpgradeLevelRespData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-22T21:50:37.996Z[GMT]")
public class UpgradeLevelRespData {
  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("userRole")
  private String userRole = null;

  @SerializedName("roleToUpgrade")
  private String roleToUpgrade = null;

  @SerializedName("upgradeLevelStatus")
  private String upgradeLevelStatus = null;

  public UpgradeLevelRespData userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public UpgradeLevelRespData userRole(String userRole) {
    this.userRole = userRole;
    return this;
  }

   /**
   * Get userRole
   * @return userRole
  **/
  @Schema(description = "")
  public String getUserRole() {
    return userRole;
  }

  public void setUserRole(String userRole) {
    this.userRole = userRole;
  }

  public UpgradeLevelRespData roleToUpgrade(String roleToUpgrade) {
    this.roleToUpgrade = roleToUpgrade;
    return this;
  }

   /**
   * Get roleToUpgrade
   * @return roleToUpgrade
  **/
  @Schema(description = "")
  public String getRoleToUpgrade() {
    return roleToUpgrade;
  }

  public void setRoleToUpgrade(String roleToUpgrade) {
    this.roleToUpgrade = roleToUpgrade;
  }

  public UpgradeLevelRespData upgradeLevelStatus(String upgradeLevelStatus) {
    this.upgradeLevelStatus = upgradeLevelStatus;
    return this;
  }

   /**
   * Get upgradeLevelStatus
   * @return upgradeLevelStatus
  **/
  @Schema(example = "Pending", description = "")
  public String getUpgradeLevelStatus() {
    return upgradeLevelStatus;
  }

  public void setUpgradeLevelStatus(String upgradeLevelStatus) {
    this.upgradeLevelStatus = upgradeLevelStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeLevelRespData upgradeLevelRespData = (UpgradeLevelRespData) o;
    return Objects.equals(this.userId, upgradeLevelRespData.userId) &&
        Objects.equals(this.userRole, upgradeLevelRespData.userRole) &&
        Objects.equals(this.roleToUpgrade, upgradeLevelRespData.roleToUpgrade) &&
        Objects.equals(this.upgradeLevelStatus, upgradeLevelRespData.upgradeLevelStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userRole, roleToUpgrade, upgradeLevelStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeLevelRespData {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    roleToUpgrade: ").append(toIndentedString(roleToUpgrade)).append("\n");
    sb.append("    upgradeLevelStatus: ").append(toIndentedString(upgradeLevelStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
