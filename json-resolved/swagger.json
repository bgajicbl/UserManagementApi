{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "UserManagementAPI",
    "description" : "API for user management",
    "contact" : {
      "email" : "support@naqdina.com"
    },
    "license" : { },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/MiDS/UserManagementAPI/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://dev.naqdina.com/api/v1",
    "description" : "Naqdina Dev server"
  } ],
  "security" : [ {
    "application" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "sales-channel",
    "description" : "sales channel"
  }, {
    "name" : "Business Types"
  } ],
  "paths" : {
    "/authenticate" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Logs user into the system",
        "description" : "Logs user into the system",
        "operationId" : "loginUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResp"
                }
              }
            }
          },
          "401" : {
            "description" : "UserName or Password incorrect/ User not approved for login/Inactive User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "userPassAuth" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "View all users.",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "usersList",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "fromUserId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toUserId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rolesId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "fromJoinDate",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "toJoinDate",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "countryId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "provinceId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "fromBalance",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "toBalance",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "hasDistributor",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "hasReseller",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AllUsers"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Add User operation",
        "description" : "Add User.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "409" : {
            "description" : "Mobile number Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "View Profile by ID.",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "getUserById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExistingUser"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Update User by Id",
        "description" : "Update User",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Mismatch Passwords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "409" : {
            "description" : "User Registration Failed (Email Already Exists)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailExistsResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Registration Failed (User Not Found)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "View Profile by ID.",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "deleteUserById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "deletedBy",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/request" : {
      "delete" : {
        "tags" : [ "Users" ],
        "operationId" : "requestDelete_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requestedBy",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/deactivate" : {
      "put" : {
        "tags" : [ "Users" ],
        "operationId" : "deactivateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "deactivatedBy",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCommon"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/deactivate/request" : {
      "put" : {
        "tags" : [ "Users" ],
        "operationId" : "requestDeactivate_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requestedBy",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/pin" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "The operation Changes pin for the user",
        "description" : "Change Pin",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments/Current Pin is not matching with your existing pin/ New and Confirm PIN doesn't match",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "The operation Creates pin for the user",
        "description" : "Set Pin",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PinReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PinResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Pin mismatch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/pin/validate" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "The operation validates pin for the user",
        "description" : "Validate Pin",
        "operationId" : "validatePin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PinValidateReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PinValidateResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Pin mismatch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Phone number Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/roles" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "The  Operation request the admin to upgrade the role of the user",
        "description" : "Upgrade Level",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "upgradeRole",
          "in" : "query",
          "description" : "Role to be upgraded to",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ROLE_RESELLER"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeLevelResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found/User Role Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleUpgradeFailedResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Upgrade Role should be higher than user's current role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_1"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/invite" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "The  Operation invite users to register into the naqdina system",
        "description" : "Invite User",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InviteUserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invite User Count Exceeds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_2"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/activate/{userId}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "The Operation activates users of the naqdina system",
        "description" : "Activate User",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "roleName",
          "in" : "query",
          "description" : "Role name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivateUserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserActivationFailedResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/view-agents" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "The Operation gets the list of Agents signed-up under an user",
        "description" : "Get my agents",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewMyAgentsResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/resellers" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "viewMyAgents",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/password" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "The Operation to change the password",
        "description" : "Change Password",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Incorrect Password or Password mismatch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/reset-password" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Reset password operation",
        "description" : "Reset password",
        "operationId" : "resetPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/passResetReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/users/getprofile/{phoneNumber}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "fetch user profile using phone number",
        "description" : "fetch user profile using phone number",
        "operationId" : "getProfileByPhone",
        "parameters" : [ {
          "name" : "phoneNumber",
          "in" : "path",
          "description" : "phoneNumber",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProfileResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Phone number not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get Customers list",
        "description" : "Get Customers list",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClientCommon"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create Customers",
        "description" : "Create Customers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Mismatch Passwords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get Customers by Id",
        "description" : "Get Customers",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body_4"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Mismatch Passwords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "409" : {
            "description" : "User Registration Failed (Email Already Exists)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailExistsResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "Update Customer by Id",
        "description" : "Update Customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Client ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_5"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Mismatch Passwords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Client not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/customers/{customerId}/activate" : {
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "activate Customer by Id",
        "description" : "activate Customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Client not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/agents" : {
      "get" : {
        "tags" : [ "Agents" ],
        "summary" : "Get Agents list",
        "description" : "Get Agents list",
        "operationId" : "getAgents",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AgentView"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Agents" ],
        "summary" : "Create Agent",
        "description" : "Create Agent",
        "operationId" : "addAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentCreate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments or Mismatch Passwords",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/agents/invite/email" : {
      "post" : {
        "tags" : [ "Agents" ],
        "summary" : "Invite Agent by email",
        "description" : "Invite Agent by email",
        "operationId" : "inviteAgentByEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_6"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Argument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/agents/register" : {
      "post" : {
        "tags" : [ "Agents" ],
        "summary" : "Agent registration",
        "description" : "Agent registration",
        "operationId" : "registerAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentRegister"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentRegisterResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Argument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/agents/invite/sms" : {
      "post" : {
        "tags" : [ "Agents" ],
        "summary" : "Invite Agent by sms",
        "description" : "Invite Agent by sms",
        "operationId" : "inviteAgentBySms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_7"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Argument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/admins" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get Admin list",
        "description" : "Get Admin List.",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Role filter",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdminCommon"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Add Admin operation",
        "description" : "Add Admin.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_8"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "409" : {
            "description" : "Mobile number Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/admins/{id}" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get Admin by id",
        "description" : "Get Admin .",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Admin id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminCommon"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "Edit Admin operation",
        "description" : "Edit Admin.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Admin id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_9"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Mobile number Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/admins/pass-reset" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Check if Password can be reset for Admin",
        "description" : "Check for Password Reset",
        "operationId" : "resetPasswordAdmin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/adminEmailPassResetInfo"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/employees" : {
      "get" : {
        "tags" : [ "Employee" ],
        "summary" : "Get Employee list",
        "description" : "Get Employee List.",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Role filter",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdminCommon"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Employee" ],
        "summary" : "Add Employee operation",
        "description" : "Add Employee.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_10"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Mobile number Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/employees/{id}" : {
      "get" : {
        "tags" : [ "Employee" ],
        "summary" : "Get Employee by id",
        "description" : "Get Employee .",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Employee id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminCommon"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Employee" ],
        "summary" : "Edit Employee operation",
        "description" : "Edit Employee.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Employee id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_11"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Mobile number Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/otp" : {
      "post" : {
        "tags" : [ "otp" ],
        "summary" : "The operation creates a otp and sends it to the client",
        "description" : "Generate OTP.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otpReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OtpResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Otp Generation Failed(Mobile Number Already Registered)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileNoExistsResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Otp Generation Failed (Invalid Arguments or Otp Request Count Exceeds)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/otp/verify" : {
      "post" : {
        "tags" : [ "otp" ],
        "summary" : "The operation veify the otp enterred by the userr",
        "description" : "Verify OTP.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/verifyOtpReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OtpResp"
                }
              }
            }
          },
          "404" : {
            "description" : "OTP Verification Failed(Invalid OTP)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "400" : {
            "description" : "OTP Verification Failed (OTP Expired)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/otp/passresetotp" : {
      "post" : {
        "tags" : [ "otp" ],
        "summary" : "The operation for password reset otp",
        "description" : "Password reset OTP.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/passResetOtpReq"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OtpPassResetResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Password Reset Otp Generation Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/mobileOTP" : {
      "get" : {
        "tags" : [ "KYC" ],
        "summary" : "Verify Mobile OTP",
        "description" : "Verifies Mobile OTP.\n",
        "operationId" : "verifyMobileOTP",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "KYC" ],
        "summary" : "Send Mobile OTP",
        "description" : "Sends Mobile OTP.\n",
        "operationId" : "sendMobileOTP",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/business-types" : {
      "get" : {
        "tags" : [ "Business Types" ],
        "summary" : "Get All Business Types",
        "description" : "Get Business Types",
        "responses" : {
          "200" : {
            "description" : "Get all  Business Type Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404" : {
            "description" : "Deleting Business Type Failed (Business Type Not Found)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeNotFoundResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Business Types" ],
        "summary" : "Add new Business Type",
        "description" : "Add Business Type",
        "requestBody" : {
          "description" : "Input Business type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessTypeReq"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding Business Type Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/business-types/{businessTypeId}" : {
      "put" : {
        "tags" : [ "Business Types" ],
        "summary" : "To Update the Business Types",
        "description" : "Update Business Type",
        "parameters" : [ {
          "name" : "businessTypeId",
          "in" : "path",
          "description" : "Business Type ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Input Business type data to be update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessTypeReq"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updating Business Type Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Updating Business Type Failed (Business Type Not Found)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeNotFoundResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Business Types" ],
        "summary" : "To Delte Existing Business Types",
        "description" : "Delete Business Type",
        "parameters" : [ {
          "name" : "businessTypeId",
          "in" : "path",
          "description" : "Business Type ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "adminId",
          "in" : "query",
          "description" : "Admin user ID who delete the business type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting Business Type Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Deleting Business Type Failed (Business Type Not Found)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessTypeNotFoundResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/roles" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Get All Roles",
        "description" : "Get Roles",
        "parameters" : [ {
          "name" : "deleted",
          "in" : "query",
          "description" : "Deleted",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Getting Roles Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Roles" ],
        "summary" : "Add new Role",
        "description" : "Add Role",
        "requestBody" : {
          "description" : "Input role data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleReq"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding Role Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Role Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleExistsResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/roles/{roleId}" : {
      "post" : {
        "tags" : [ "Roles" ],
        "summary" : "Update existing Role",
        "description" : "Update Role",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Input role data to be update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleReq"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updating Role Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          },
          "409" : {
            "description" : "Role Name Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleExistsResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Role Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "summary" : "Delete existing Role",
        "description" : "Delete Role",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "description" : "Role ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "adminId",
          "in" : "query",
          "description" : "Admin Id",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete Role Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleResp"
                }
              }
            }
          },
          "404" : {
            "description" : "Role Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/mailOTP" : {
      "get" : {
        "tags" : [ "KYC" ],
        "summary" : "Verify Mail OTP",
        "description" : "Verifies Mail OTP.\n",
        "operationId" : "verifyMailOTP",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "KYC" ],
        "summary" : "Send Mail OTP",
        "description" : "Sends Mail OTP.\n",
        "operationId" : "sendMailOTP",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/kycdocs" : {
      "put" : {
        "tags" : [ "KYC" ],
        "summary" : "Upload KYC Docs",
        "description" : "Uploads KYC Docs.\n",
        "operationId" : "uploadKycDocs",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Input parameter which holds KYC Docs details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KycDocsInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/{userId}/kyc" : {
      "put" : {
        "tags" : [ "KYC" ],
        "summary" : "Update KYC info",
        "description" : "Approve KYC.\n",
        "operationId" : "updateKyc",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Input parameter which holds KYC update info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KycUpdateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "Common" ],
        "summary" : "Get Countries",
        "description" : "Get Countries",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/provinces" : {
      "get" : {
        "tags" : [ "Common" ],
        "summary" : "Get Provinces",
        "description" : "Get Provinces",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "query",
          "description" : "Country ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/cities" : {
      "get" : {
        "tags" : [ "Common" ],
        "summary" : "Get Cities",
        "description" : "Get Cities",
        "parameters" : [ {
          "name" : "provinceId",
          "in" : "query",
          "description" : "Province ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get Existing Groups",
        "description" : "Get Existing Groups",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Add New  Group",
        "description" : "Add Group",
        "requestBody" : {
          "description" : "Request for Add Group",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_12"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "409" : {
            "description" : "Group Already Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_2"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/groups/{groupId}" : {
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete Existing Group",
        "description" : "Delete Group",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Group Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "226" : {
            "description" : "Cannot Delete Group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_2"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/groups/{groupId}/users" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Add Users to the Group",
        "description" : "Add User to group",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Group Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for adding user to group",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_13"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/distributors" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for distributors",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "getSalesChannelDistributors",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "search filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesChannelResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "Add new distributor",
        "description" : "Add new distributor",
        "operationId" : "addDistributor",
        "requestBody" : {
          "description" : "Input distributor type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_14"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding Distributor Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/distributors/{id}" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View Profile of Distributor",
        "description" : "Gets a distributor profile by ID.\n",
        "operationId" : "getDistributorProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "distributor id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DistributorResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/resellers" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for resellers",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "getSalesChannelResellers",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "search filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesChannelResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "Add new reseller",
        "description" : "Add new reseller",
        "operationId" : "addReseller",
        "requestBody" : {
          "description" : "Input reseller type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_15"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding reseller Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/resellers/{id}" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View Profile of reseller",
        "description" : "Gets a distributor profile by ID.\n",
        "operationId" : "getResellerProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "reseller id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResellerResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/agents" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for agents",
        "description" : "Gets a agents \n",
        "operationId" : "getSalesChannelAgents",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "search filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesChannelResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "Add new agent",
        "description" : "Add new agent",
        "operationId" : "addNewAgent",
        "requestBody" : {
          "description" : "Input agent type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_16"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding agent Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/agents/{id}" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View Profile of agent",
        "description" : "Gets a agent profile by ID.\n",
        "operationId" : "getAgentProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "agents id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AgentResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/lenders" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for lenders",
        "description" : "Gets a agents \n",
        "operationId" : "getSalesChannelLenders",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "search filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesChannelResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "Add new lender",
        "description" : "Add new lender",
        "operationId" : "addLender",
        "requestBody" : {
          "description" : "Input lenders type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_17"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding lender Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/lenders/{id}" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View Profile of lender",
        "description" : "Gets a lender profile by ID.\n",
        "operationId" : "getLenderProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "lender id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LenderResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/api-client" : {
      "get" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for api client",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "getSalesChannelApiClients",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "search filter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesChannelApiClientsResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "Add new api client",
        "description" : "Add new api client",
        "operationId" : "addApiClient",
        "requestBody" : {
          "description" : "Input api client type data to be add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_18"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Adding api client Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonResp"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Arguments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/{userType}/activate/{userId}" : {
      "post" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for api client",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "activateSalesChannelUser",
        "parameters" : [ {
          "name" : "userType",
          "in" : "path",
          "description" : "user type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "distributor", "reseller", "agent", "lender" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_19"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommonResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/users/sales-channel/{userType}/{userId}" : {
      "delete" : {
        "tags" : [ "sales-channel" ],
        "summary" : "View sales channel for api client",
        "description" : "Gets a user profile by ID.\n",
        "operationId" : "deleteSalesChannelUser",
        "parameters" : [ {
          "name" : "userType",
          "in" : "path",
          "description" : "user type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "distributor", "reseller", "agent", "api-client" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommonResp"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResp"
                }
              }
            }
          }
        },
        "security" : [ {
          "tokenAuth" : [ ]
        } ]
      }
    },
    "/levels/get-level" : {
      "get" : {
        "tags" : [ "Levels" ],
        "operationId" : "getLevel",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/edit-level" : {
      "post" : {
        "tags" : [ "Levels" ],
        "operationId" : "editLevel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Levels"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/view-level" : {
      "get" : {
        "tags" : [ "Levels" ],
        "operationId" : "viewLevel",
        "parameters" : [ {
          "name" : "levelId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/new-level" : {
      "post" : {
        "tags" : [ "Levels" ],
        "operationId" : "addLevel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserLevelsInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/move-level" : {
      "post" : {
        "tags" : [ "Levels" ],
        "operationId" : "moveLevel",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toUplineId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/upline-resellers-and-levels" : {
      "get" : {
        "tags" : [ "Levels" ],
        "operationId" : "getUplineResellers",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsListResp"
                }
              }
            }
          }
        }
      }
    },
    "/levels/export" : {
      "get" : {
        "tags" : [ "Levels" ],
        "operationId" : "exportLevels",
        "parameters" : [ {
          "name" : "fromLevelId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toLevelId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        }
      }
    },
    "/levels/view-reseller" : {
      "get" : {
        "tags" : [ "Levels" ],
        "operationId" : "viewReseller",
        "parameters" : [ {
          "name" : "uplineId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelsListResp"
                }
              }
            }
          }
        }
      }
    },
    "/ping" : {
      "get" : {
        "summary" : "Server heartbeat operation",
        "description" : "This operation shows Server heartbeat.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserCommon" : {
        "required" : [ "city", "country", "firstName", "lastName", "mobileNumber", "parentId", "role" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "businessName" : {
            "type" : "string"
          },
          "mobileNo" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "province" : {
            "type" : "string"
          },
          "resellerId" : {
            "type" : "integer"
          },
          "distributorId" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "balance" : {
            "type" : "number"
          },
          "remarks" : {
            "type" : "string"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "AdminCommon" : {
        "required" : [ "email", "firstName", "mobileNumber", "userId" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "role" : {
            "type" : "integer"
          },
          "joinDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "ViewMyAgentsResponse" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "province" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "joinDate" : {
            "type" : "string"
          }
        }
      },
      "CommissionResponse" : {
        "type" : "object",
        "properties" : {
          "providerId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          }
        }
      },
      "ClientCommon" : {
        "required" : [ "email", "firstName", "mobileNumber", "userId" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "integer"
          },
          "joinDate" : {
            "type" : "string",
            "format" : "timestamp"
          }
        }
      },
      "AgentView" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "joinDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "status" : {
            "type" : "integer"
          },
          "balance" : {
            "type" : "number"
          }
        }
      },
      "AgentCreate" : {
        "required" : [ "email", "firstName", "mobileNumber", "userId" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "integer"
          },
          "country" : {
            "type" : "integer"
          },
          "province" : {
            "type" : "integer"
          },
          "city" : {
            "type" : "integer"
          }
        }
      },
      "AgentRegister" : {
        "required" : [ "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "mpin" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          }
        }
      },
      "AgentRegisterResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "anyOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "dateTime" : {
                      "type" : "string",
                      "format" : "datetime"
                    },
                    "phoneNumber" : {
                      "type" : "string",
                      "example" : "+930798768765"
                    },
                    "userId" : {
                      "type" : "integer",
                      "example" : 64
                    },
                    "firstName" : {
                      "type" : "string"
                    },
                    "lastName" : {
                      "type" : "string"
                    },
                    "language" : {
                      "type" : "string",
                      "example" : "en"
                    }
                  }
                } ]
              }
            }
          }
        } ]
      },
      "GetProfileResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "anyOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "userId" : {
                      "type" : "integer",
                      "example" : 64
                    },
                    "firstName" : {
                      "type" : "string"
                    },
                    "lastName" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string",
                      "example" : "Active"
                    }
                  }
                } ]
              }
            }
          }
        } ]
      },
      "NewUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserCommon"
        }, {
          "required" : [ "address", "province" ],
          "type" : "object",
          "properties" : {
            "address" : {
              "type" : "string"
            },
            "province" : {
              "type" : "integer"
            },
            "alternateMobileNumber" : {
              "type" : "string"
            },
            "postalCode" : {
              "type" : "string"
            },
            "position" : {
              "type" : "string"
            },
            "profilePicture" : {
              "type" : "string",
              "format" : "binary"
            }
          }
        } ]
      },
      "passResetReq" : {
        "required" : [ "confirmPassword", "country", "mobileNumber", "password", "pin", "userType" ],
        "type" : "object",
        "properties" : {
          "userType" : {
            "type" : "integer"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "country" : {
            "type" : "integer"
          },
          "pin" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "confirmPassword" : {
            "type" : "string"
          }
        },
        "description" : "Request to reset password"
      },
      "otpReq" : {
        "required" : [ "mobileNumber", "role" ],
        "type" : "object",
        "properties" : {
          "mobileNumber" : {
            "type" : "string",
            "example" : "+930798768765"
          },
          "role" : {
            "type" : "integer"
          }
        }
      },
      "ExistingUser" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "role" : {
            "$ref" : "#/components/schemas/Role"
          },
          "balance" : {
            "type" : "number"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "province" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "businessName" : {
            "type" : "string"
          },
          "businessType" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "profilePicture" : {
            "type" : "string"
          },
          "joinDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "AllUsers" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ExistingUser"
              }
            }
          }
        } ]
      },
      "UserResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/ExistingUser"
            }
          }
        } ]
      },
      "KycDocsInput" : {
        "type" : "object",
        "properties" : {
          "idProofFile" : {
            "type" : "string"
          },
          "passportPhoto" : {
            "type" : "string"
          },
          "businessProof" : {
            "type" : "string"
          }
        }
      },
      "KycUpdateInput" : {
        "type" : "object",
        "properties" : {
          "mobilePhone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "photoIdProof" : {
            "type" : "integer"
          },
          "photoId" : {
            "type" : "string"
          },
          "businessProof" : {
            "type" : "string"
          },
          "photo" : {
            "type" : "string"
          },
          "otp" : {
            "type" : "string"
          }
        }
      },
      "verifyOtpReq" : {
        "required" : [ "otp", "userId" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "otp" : {
            "type" : "string",
            "example" : "876789"
          }
        },
        "description" : "Request to Verify the OTP"
      },
      "passResetOtpReq" : {
        "required" : [ "mobileNumber", "role" ],
        "type" : "object",
        "properties" : {
          "mobileNumber" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "example" : "ROLE_AGENT"
          }
        },
        "description" : "Request to reset password OTP"
      },
      "OtpResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/OtpResp_data"
            }
          }
        } ]
      },
      "OtpPassResetResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/OtpPassResetResp_data"
            }
          }
        } ]
      },
      "MobileNoExistsResp" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string",
            "example" : "OTP Generation successfull"
          },
          "data" : {
            "$ref" : "#/components/schemas/MobileNoExistsResp_data"
          }
        }
      },
      "CommonErrorResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/CommonErrorResp_data"
            }
          }
        } ]
      },
      "UserReq" : {
        "required" : [ "address", "businessName", "businessType", "city", "confirmPassword", "country", "firstName", "lastName", "password" ],
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "country" : {
            "type" : "integer"
          },
          "city" : {
            "type" : "integer"
          },
          "address" : {
            "type" : "string"
          },
          "businessName" : {
            "type" : "string"
          },
          "businessType" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "confirmPassword" : {
            "type" : "string"
          }
        }
      },
      "CommonResp" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "EmailExistsResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/EmailExistsResp_data"
            }
          }
        } ]
      },
      "PinReq" : {
        "required" : [ "confirmPin", "pin" ],
        "type" : "object",
        "properties" : {
          "pin" : {
            "type" : "string"
          },
          "confirmPin" : {
            "maxLength" : 4,
            "minLength" : 4,
            "type" : "string"
          }
        }
      },
      "PinValidateReq" : {
        "required" : [ "phoneNumber", "pin" ],
        "type" : "object",
        "properties" : {
          "pin" : {
            "maxLength" : 4,
            "minLength" : 4,
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          }
        }
      },
      "PinResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/PinResp_data"
            }
          }
        } ]
      },
      "PinValidateResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/PinValidateResp_data"
            }
          }
        } ]
      },
      "AuthenticateResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/AuthenticateResp_data"
            }
          }
        } ]
      },
      "BusinessTypeReq" : {
        "required" : [ "adminId", "businessType" ],
        "type" : "object",
        "properties" : {
          "businessType" : {
            "type" : "string"
          },
          "adminId" : {
            "type" : "integer"
          }
        }
      },
      "BusinessTypeResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/BusinessType"
              } ]
            }
          }
        } ]
      },
      "BusinessTypeNotFoundResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/BusinessTypeNotFoundResp_data"
            }
          }
        } ]
      },
      "RoleReq" : {
        "required" : [ "adminId", "hierarchy", "roleName" ],
        "type" : "object",
        "properties" : {
          "roleName" : {
            "type" : "string"
          },
          "adminId" : {
            "type" : "integer"
          },
          "featureList" : {
            "type" : "integer"
          },
          "hierarchy" : {
            "type" : "integer"
          }
        }
      },
      "RoleResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/Role"
              } ]
            }
          }
        } ]
      },
      "RoleUpgradeFailedResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/RoleUpgradeFailedResp_data"
            }
          }
        } ]
      },
      "RoleExistsResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/RoleExistsResp_data"
            }
          }
        } ]
      },
      "BusinessType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "createdBy" : {
            "type" : "integer"
          },
          "lastModifiedBy" : {
            "type" : "integer"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "Role" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "roleName" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "integer"
          },
          "lastModifiedBy" : {
            "type" : "integer"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "featureList" : {
            "type" : "integer"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "hierarchy" : {
            "type" : "integer"
          },
          "usersCount" : {
            "type" : "integer"
          },
          "permission" : {
            "$ref" : "#/components/schemas/PermissionsInfo"
          }
        }
      },
      "PermissionsInfo" : {
        "type" : "object",
        "properties" : {
          "roleName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "hierarchy" : {
            "type" : "integer"
          },
          "adminId" : {
            "type" : "integer"
          },
          "dashBoard" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "manageUsers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "manageBalances" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "livePerformance" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "manageProviders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "statements" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "transactions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "cmsManagers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          },
          "reports" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "shortName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phoneCode" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          }
        }
      },
      "Province" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "countryId" : {
            "type" : "integer"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          }
        }
      },
      "City" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "provinceId" : {
            "type" : "integer"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          }
        }
      },
      "UpgradeLevelResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/UpgradeLevelResp_data"
            }
          }
        } ]
      },
      "ActivateUserResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/ActivateUserResp_data"
            }
          }
        } ]
      },
      "UserActivationFailedResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/UserActivationFailedResp_data"
            }
          }
        } ]
      },
      "InviteUserResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "anyOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "user" : {
                      "type" : "string"
                    },
                    "inviteStatus" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "User Invited Success"
                    },
                    "code" : {
                      "type" : "integer",
                      "example" : 200
                    }
                  }
                }, {
                  "type" : "object",
                  "properties" : {
                    "user" : {
                      "type" : "string"
                    },
                    "inviteStatus" : {
                      "type" : "string",
                      "example" : "failed"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "User Invited already"
                    },
                    "code" : {
                      "type" : "integer",
                      "example" : 409
                    }
                  }
                }, {
                  "type" : "object",
                  "properties" : {
                    "user" : {
                      "type" : "string"
                    },
                    "inviteStatus" : {
                      "type" : "string",
                      "example" : "failed"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "User Already Registered with Naqdina System"
                    },
                    "code" : {
                      "type" : "integer",
                      "example" : 400
                    }
                  }
                } ]
              }
            }
          }
        } ]
      },
      "NewUserResp" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/NewUserResp_data"
          }
        }
      },
      "ViewMyAgentsResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "anyOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "user" : {
                      "type" : "string"
                    },
                    "inviteStatus" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "View My Agents Success"
                    },
                    "code" : {
                      "type" : "integer",
                      "example" : 200
                    }
                  }
                } ]
              }
            }
          }
        } ]
      },
      "GroupDetail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "groupDeleted" : {
            "type" : "boolean"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "createdBy" : {
            "type" : "integer"
          },
          "lastModifiedBy" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "adminEmailPassResetInfo" : {
        "required" : [ "adminEmail" ],
        "type" : "object",
        "properties" : {
          "adminEmail" : {
            "type" : "string",
            "example" : "test@test.com"
          }
        }
      },
      "AccountInfo" : {
        "type" : "object",
        "properties" : {
          "receiver" : {
            "type" : "string"
          },
          "bankName" : {
            "type" : "integer"
          },
          "iban" : {
            "type" : "string"
          },
          "swift" : {
            "type" : "string"
          }
        }
      },
      "Providers" : {
        "type" : "object",
        "properties" : {
          "commisionStructure" : {
            "type" : "boolean"
          },
          "provider" : {
            "type" : "boolean"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "detailedCommision" : {
            "type" : "number"
          }
        }
      },
      "Target" : {
        "type" : "object",
        "properties" : {
          "settarget" : {
            "type" : "boolean"
          },
          "period" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "integer"
          },
          "target" : {
            "type" : "number"
          }
        }
      },
      "OtherInfo" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "status" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "remarks" : {
            "type" : "string"
          }
        }
      },
      "SalesChannelCommon" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "joinDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "SalesChannelResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SalesChannelCommon"
                }, {
                  "type" : "object",
                  "properties" : {
                    "groups" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "product" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                } ]
              }
            }
          }
        } ]
      },
      "SalesChannelApiClientsResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/SalesChannelCommon"
              }
            }
          }
        } ]
      },
      "SalesChannelBasicInfo" : {
        "type" : "object",
        "properties" : {
          "basicInfo" : {
            "$ref" : "#/components/schemas/SalesChannelBasicInfo_basicInfo"
          }
        }
      },
      "SalesChannelAccountInfo" : {
        "type" : "object",
        "properties" : {
          "accountInfo" : {
            "$ref" : "#/components/schemas/SalesChannelAccountInfo_accountInfo"
          }
        }
      },
      "SalesChannelProvidersCommission" : {
        "type" : "object",
        "properties" : {
          "providersAndCommission" : {
            "$ref" : "#/components/schemas/SalesChannelProvidersCommission_providersAndCommission"
          }
        }
      },
      "SalesChannelTarget" : {
        "type" : "object",
        "properties" : {
          "target" : {
            "$ref" : "#/components/schemas/SalesChannelTarget_target"
          }
        }
      },
      "SalesChannelOtherinfo" : {
        "type" : "object",
        "properties" : {
          "otherInfo" : {
            "$ref" : "#/components/schemas/SalesChannelOtherinfo_otherInfo"
          }
        }
      },
      "SalesChannelBranch" : {
        "type" : "object",
        "properties" : {
          "branch" : {
            "$ref" : "#/components/schemas/SalesChannelBranch_branch"
          }
        }
      },
      "DistributorResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SalesChannelBasicInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelAccountInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelTarget"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelOtherinfo"
                } ]
              }
            }
          }
        } ]
      },
      "ResellerResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SalesChannelBasicInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelAccountInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelTarget"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelBranch"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelOtherinfo"
                } ]
              }
            }
          }
        } ]
      },
      "AgentResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SalesChannelBasicInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelAccountInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelTarget"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelBranch"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelOtherinfo"
                } ]
              }
            }
          }
        } ]
      },
      "LenderResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SalesChannelBasicInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelAccountInfo"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
                }, {
                  "$ref" : "#/components/schemas/SalesChannelOtherinfo"
                } ]
              }
            }
          }
        } ]
      },
      "LevelsResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/Levels"
              } ]
            }
          }
        } ]
      },
      "LevelsListResp" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Levels"
                } ]
              }
            }
          }
        } ]
      },
      "Levels" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "levelName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "uplineId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "floatAccount" : {
            "type" : "boolean"
          },
          "levelId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roleId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserLevelsInfo" : {
        "type" : "object",
        "properties" : {
          "levelName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "uplineId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "floatAccount" : {
            "type" : "boolean"
          },
          "roleId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "body" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "$ref" : "#/components/schemas/NewUserResp"
        } ]
      },
      "inline_response_409" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MobileNoExistsResp"
        }, {
          "$ref" : "#/components/schemas/EmailExistsResp"
        } ]
      },
      "body_1" : {
        "required" : [ "confirmPin", "currentPin", "newPin" ],
        "type" : "object",
        "properties" : {
          "currentPin" : {
            "type" : "string"
          },
          "newPin" : {
            "type" : "string"
          },
          "confirmPin" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/inline_response_200_1_data"
            }
          }
        } ]
      },
      "inline_response_400" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonErrorResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/inline_response_400_data"
            }
          }
        } ]
      },
      "inline_response_400_1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/inline_response_400_1_data"
            }
          }
        } ]
      },
      "body_2" : {
        "type" : "object",
        "properties" : {
          "inviteUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "example@gmail.com"
            }
          }
        }
      },
      "inline_response_400_2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonErrorResp"
        } ]
      },
      "body_3" : {
        "required" : [ "confirmPassword", "currentPassword", "newPassword" ],
        "type" : "object",
        "properties" : {
          "currentPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          },
          "confirmPassword" : {
            "type" : "string"
          },
          "isForgotPassword" : {
            "type" : "string"
          }
        }
      },
      "body_4" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserReq"
        }, {
          "$ref" : "#/components/schemas/AccountInfo"
        }, {
          "$ref" : "#/components/schemas/Providers"
        }, {
          "$ref" : "#/components/schemas/Target"
        }, {
          "$ref" : "#/components/schemas/OtherInfo"
        } ]
      },
      "body_5" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserResp"
        }, {
          "$ref" : "#/components/schemas/AccountInfo"
        }, {
          "$ref" : "#/components/schemas/Providers"
        }, {
          "$ref" : "#/components/schemas/Target"
        }, {
          "$ref" : "#/components/schemas/OtherInfo"
        } ]
      },
      "body_6" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        }
      },
      "body_7" : {
        "type" : "object",
        "properties" : {
          "sms" : {
            "type" : "string"
          }
        }
      },
      "body_8" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserCommon"
        }, {
          "required" : [ "profilePicture", "status" ],
          "type" : "object",
          "properties" : {
            "profilePicture" : {
              "type" : "string"
            },
            "groups" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "status" : {
              "type" : "string"
            },
            "remarks" : {
              "type" : "string"
            }
          }
        } ]
      },
      "body_9" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserCommon"
        }, {
          "required" : [ "profilePicture", "status" ],
          "type" : "object",
          "properties" : {
            "profilePicture" : {
              "type" : "string"
            },
            "groups" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "status" : {
              "type" : "string"
            },
            "remarks" : {
              "type" : "string"
            }
          }
        } ]
      },
      "body_10" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserCommon"
        }, {
          "required" : [ "profilePicture", "status" ],
          "type" : "object",
          "properties" : {
            "profilePicture" : {
              "type" : "string"
            },
            "groups" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "status" : {
              "type" : "string"
            },
            "remarks" : {
              "type" : "string"
            }
          }
        } ]
      },
      "body_11" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UserCommon"
        }, {
          "required" : [ "profilePicture", "status" ],
          "type" : "object",
          "properties" : {
            "profilePicture" : {
              "type" : "string"
            },
            "groups" : {
              "type" : "array",
              "items" : {
                "type" : "integer"
              }
            },
            "status" : {
              "type" : "string"
            },
            "remarks" : {
              "type" : "string"
            }
          }
        } ]
      },
      "inline_response_404" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "details" : {
              "type" : "string"
            },
            "mobileNumber" : {
              "type" : "string"
            }
          }
        } ]
      },
      "inline_response_200_2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BusinessType"
              }
            }
          }
        } ]
      },
      "inline_response_200_3" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          }
        } ]
      },
      "inline_response_200_4" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Country"
              }
            }
          }
        } ]
      },
      "inline_response_200_5" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Province"
              }
            }
          }
        } ]
      },
      "inline_response_200_6" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/City"
              }
            }
          }
        } ]
      },
      "inline_response_200_7" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/inline_response_200_7_data"
              }
            }
          }
        } ]
      },
      "body_12" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "userList" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "adminId" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_8" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/GroupDetail"
            }
          }
        } ]
      },
      "inline_response_200_9" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonResp"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "string"
            }
          }
        } ]
      },
      "body_13" : {
        "type" : "object",
        "properties" : {
          "userList" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "body_14" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SalesChannelBasicInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelAccountInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
        }, {
          "$ref" : "#/components/schemas/SalesChannelTarget"
        }, {
          "$ref" : "#/components/schemas/SalesChannelOtherinfo"
        } ]
      },
      "body_15" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SalesChannelBasicInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelAccountInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
        }, {
          "$ref" : "#/components/schemas/SalesChannelBranch"
        }, {
          "$ref" : "#/components/schemas/SalesChannelTarget"
        }, {
          "$ref" : "#/components/schemas/SalesChannelOtherinfo"
        } ]
      },
      "body_16" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SalesChannelBasicInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelAccountInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
        }, {
          "$ref" : "#/components/schemas/SalesChannelBranch"
        }, {
          "$ref" : "#/components/schemas/SalesChannelTarget"
        }, {
          "$ref" : "#/components/schemas/SalesChannelOtherinfo"
        } ]
      },
      "body_17" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SalesChannelBasicInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelAccountInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
        }, {
          "$ref" : "#/components/schemas/SalesChannelOtherinfo"
        } ]
      },
      "body_18" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SalesChannelBasicInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelAccountInfo"
        }, {
          "$ref" : "#/components/schemas/SalesChannelProvidersCommission"
        }, {
          "$ref" : "#/components/schemas/SalesChannelOtherinfo"
        } ]
      },
      "body_19" : {
        "type" : "object",
        "properties" : {
          "activate" : {
            "type" : "boolean"
          }
        }
      },
      "OtpResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "otpValidationStatus" : {
            "type" : "string",
            "example" : "Pending"
          }
        }
      },
      "OtpPassResetResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "example" : 6
          },
          "message" : {
            "type" : "string",
            "example" : "success"
          }
        }
      },
      "MobileNoExistsResp_data" : {
        "type" : "object",
        "properties" : {
          "mobileNumber" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "CommonErrorResp_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          }
        }
      },
      "EmailExistsResp_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "PinResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          }
        }
      },
      "PinValidateResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "agentNames" : {
            "type" : "string"
          }
        }
      },
      "AuthenticateResp_data_authorities" : {
        "type" : "object",
        "properties" : {
          "authority" : {
            "type" : "string"
          }
        }
      },
      "AuthenticateResp_data" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "authorities" : {
            "$ref" : "#/components/schemas/AuthenticateResp_data_authorities"
          }
        }
      },
      "BusinessTypeNotFoundResp_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          },
          "businessType" : {
            "type" : "integer"
          }
        }
      },
      "RoleUpgradeFailedResp_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "integer"
          }
        }
      },
      "RoleExistsResp_data" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "UpgradeLevelResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "userRole" : {
            "type" : "string"
          },
          "roleToUpgrade" : {
            "type" : "string"
          },
          "upgradeLevelStatus" : {
            "type" : "string",
            "example" : "Pending"
          }
        }
      },
      "ActivateUserResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "example" : 6
          },
          "userRole" : {
            "type" : "string",
            "example" : "ROLE_RESELLER"
          },
          "userStatus" : {
            "type" : "string",
            "example" : "Active"
          }
        }
      },
      "UserActivationFailedResp_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "integer"
          },
          "role" : {
            "type" : "string"
          }
        }
      },
      "NewUserResp_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "SalesChannelBasicInfo_basicInfo" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "businessName" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "streetName" : {
            "type" : "string"
          },
          "streetNumber" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          }
        }
      },
      "SalesChannelAccountInfo_accountInfo" : {
        "type" : "object",
        "properties" : {
          "receiver" : {
            "type" : "string"
          },
          "bankName" : {
            "type" : "string"
          },
          "iban" : {
            "type" : "string"
          },
          "swift" : {
            "type" : "string"
          }
        }
      },
      "SalesChannelProvidersCommission_providersAndCommission" : {
        "type" : "object",
        "properties" : {
          "openCommissionStructure" : {
            "type" : "boolean"
          },
          "provider" : {
            "type" : "string"
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "detailedCommission" : {
            "type" : "number"
          }
        }
      },
      "SalesChannelTarget_target" : {
        "type" : "object",
        "properties" : {
          "setTarget" : {
            "type" : "boolean"
          },
          "period" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "target" : {
            "type" : "number"
          }
        }
      },
      "SalesChannelOtherinfo_otherInfo" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "remarks" : {
            "type" : "string"
          }
        }
      },
      "SalesChannelBranch_branch" : {
        "type" : "object",
        "properties" : {
          "isUplineDistributor" : {
            "type" : "boolean"
          },
          "uplineDistributor" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_1_data" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "mpinModifiedDatetime" : {
            "type" : "string",
            "format" : "timestamp"
          }
        }
      },
      "inline_response_400_data" : {
        "type" : "object",
        "properties" : {
          "incorrectPin" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "inline_response_400_1_data" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "upgradeRole" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_7_data" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupDescription" : {
            "type" : "string"
          },
          "groupUserCount" : {
            "type" : "integer"
          }
        }
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Authentication information is missing or invalid",
        "headers" : {
          "WWW_Authenticate" : {
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "userPassAuth" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "tokenAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "application" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "http://example.com/oauth/token",
            "scopes" : {
              "write" : "allows modifying resources",
              "read" : "allows reading resources"
            }
          }
        }
      }
    }
  }
}